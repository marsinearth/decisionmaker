'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _ribbonStyle = require('./ribbonStyle');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var positionMapping = {
  left: [_ribbonStyle.GitHubForkRibbon.leftStyle, _ribbonStyle.GitHubForkRibbonWrapper.leftStyle],
  right: [_ribbonStyle.GitHubForkRibbon.rightStyle, _ribbonStyle.GitHubForkRibbonWrapper.rightStyle],
  'left-bottom': [_ribbonStyle.GitHubForkRibbon.leftBottomStyle, _ribbonStyle.GitHubForkRibbonWrapper.leftBottomStyle],
  'right-bottom': [_ribbonStyle.GitHubForkRibbon.rightBottomStyle, _ribbonStyle.GitHubForkRibbonWrapper.rightBottomStyle]
};

var colorMapping = {
  red: _ribbonStyle.GitHubForkRibbon.redColor,
  orange: _ribbonStyle.GitHubForkRibbon.orangeColor,
  black: _ribbonStyle.GitHubForkRibbon.blackColor,
  green: _ribbonStyle.GitHubForkRibbon.greenColor
};

exports.default = global.GitHubForkRibbon = _react2.default.createClass({
  displayName: 'GitHubForkRibbon',
  render: function render() {
    var _props = this.props,
        _props$position = _props.position,
        position = _props$position === undefined ? 'right' : _props$position,
        href = _props.href,
        target = _props.target,
        _props$color = _props.color,
        color = _props$color === undefined ? 'red' : _props$color,
        other = _objectWithoutProperties(_props, ['position', 'href', 'target', 'color']);

    var positionStyle = positionMapping[position] || [_ribbonStyle.GitHubForkRibbon.rightStyle, _ribbonStyle.GitHubForkRibbonWrapper.rightStyle];
    var colorStyle = colorMapping[color] || _ribbonStyle.GitHubForkRibbon.redColor;

    if (positionStyle[0] === _ribbonStyle.GitHubForkRibbon.rightStyle) {
      position = 'right';
    }

    this.ribbonStyle = _extends({}, _ribbonStyle.GitHubForkRibbon.baseStyle, positionStyle[0], colorStyle);

    this.wrapperStyle = _extends({}, _ribbonStyle.GitHubForkRibbonWrapper.baseStyle, positionStyle[1]);

    return _react2.default.createElement(
      'div',
      _extends({}, other, {
        className: 'github-fork-ribbon-wrapper ' + position,
        style: this.wrapperStyle }),
      _react2.default.createElement(
        'div',
        { className: 'github-fork-ribbon',
          style: this.ribbonStyle },
        _react2.default.createElement(
          'a',
          { href: href,
            target: target,
            style: _ribbonStyle.GitHubForkRibbon.urlStyle },
          this.props.children
        )
      )
    );
  }
});